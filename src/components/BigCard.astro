---
export interface Props {
	title: string;
	body: string;
	href: string;
	stack: Array<string>;
}

const { href, title, body, stack } = Astro.props;
---

<li class="link-card bg-stone-700">
	<a href={href} class="bg-stone-700 flex flex-col justify-between gap3">
		<div class="mb-5">
			<h2 class="mb-1">
				{title}
				<span class="inline-block">&rarr;</span>
			</h2>
			<p class="mt-2">
				{body}
			</p>
	</div>
		<div class="flex flex-wrap gap-3 overflow-scroll">
			{stack.map((item) => (
				<div class="flex gap-1 bg-stone-800 py-1 px-3 opacity-100 items-center rounded-3xl border border-stone-400">
					<img src={`/logos/${item.toLowerCase()}.svg`} alt={item} class="max-h-5 max-w-[1.25rem]" />
					<p>{item}</p>
				</div>
			))}
		</div>
	</a>
</li>
<style>
	.link-card {
		aspect-ratio: 16/10;
		list-style: none;
		display: flex;
		padding: 0.25rem;
		background-image: none;
		background-size: 400%;
		border-radius: 0.6rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 4px 6px -1px #1A3f3f46, 0 2px 4px -2px #1A3f3f46;
	}

	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1rem 1.3rem;
		border-radius: 0.35rem;
		color: #ffffff;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		font-family: 'Velodroma', sans-serif;
	}
	p {
		color: #fff;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}
	.link-card:is(:hover, :focus-within) span {
		transition: transform 0.5s ease-out;
		transform: translateX(5px);
	}
	@media only screen and (max-width: 773px) {
		.link-card {
			aspect-ratio: auto;
		}
	}
</style>
